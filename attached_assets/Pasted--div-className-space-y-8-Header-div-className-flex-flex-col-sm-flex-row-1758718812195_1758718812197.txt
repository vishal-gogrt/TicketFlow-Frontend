  <div className="space-y-8">
      {/* Header */}
      <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center space-y-6 sm:space-y-0">
        <div>
          <h2 className="text-3xl font-bold text-slate-900">Tickets</h2>
          <p className="text-slate-600 mt-2">
            Manage and track all support tickets
          </p>
          <div className="flex items-center space-x-6 mt-4">
            <div className="flex items-center text-sm text-slate-500">
              <div className="w-2 h-2 bg-blue-500 rounded-full mr-2"></div>
              {tickets.filter((t) => t.status === "open").length} Open
            </div>
            <div className="flex items-center text-sm text-slate-500">
              <div className="w-2 h-2 bg-purple-500 rounded-full mr-2"></div>
              {tickets.filter((t) => t.status === "in_progress").length} In
              Progress
            </div>
            <div className="flex items-center text-sm text-slate-500">
              <div className="w-2 h-2 bg-green-500 rounded-full mr-2"></div>
              {tickets.filter((t) => t.status === "resolved").length} Resolved
            </div>
          </div>
        </div>
        <button
          onClick={onCreateTicket}
          className="inline-flex items-center px-6 py-3 border border-transparent rounded-xl shadow-sm text-sm font-medium text-white bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 transition-all duration-200"
        >
          <Plus className="h-5 w-5 mr-2" />
          New Ticket
        </button>
      </div>

      {/* Filters */}
      <div className="bg-white/60 backdrop-blur-sm p-6 rounded-2xl shadow-sm border border-slate-200/60">
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4">
          <div className="lg:col-span-2">
            <div className="relative">
              <Search className="absolute left-4 top-1/2 transform -translate-y-1/2 text-slate-400 h-5 w-5" />
              <input
                type="text"
                placeholder="Search tickets..."
                value={searchTerm}
                onChange={(e) => {
                  setSearchTerm(e.target.value);
                  setCurrentPage(1);
                }}
                className="w-full pl-12 pr-4 py-3 border border-slate-200 rounded-xl bg-white/50 focus:ring-2 focus:ring-blue-500/20 focus:border-blue-300 placeholder-slate-400"
              />
            </div>
          </div>

          <select
            value={statusFilter}
            onChange={(e) => {
              setStatusFilter(e.target.value);
              setCurrentPage(1);
            }}
            className="px-4 py-3 border border-slate-200 rounded-xl bg-white/50 focus:ring-blue-500/20 text-slate-700"
          >
            <option value="all">All Status</option>
            <option value="open">Open</option>
            <option value="in_progress">In Progress</option>
            <option value="resolved">Resolved</option>
            <option value="closed">Closed</option>
          </select>

          <select
            value={priorityFilter}
            onChange={(e) => {
              setPriorityFilter(e.target.value);
              setCurrentPage(1);
            }}
            className="px-4 py-3 border border-slate-200 rounded-xl bg-white/50 focus:ring-blue-500/20 text-slate-700"
          >
            <option value="all">All Priority</option>
            <option value="high">High</option>
            <option value="medium">Medium</option>
            <option value="low">Low</option>
          </select>

          <select
            value={categoryFilter}
            onChange={(e) => {
              setCategoryFilter(e.target.value);
              setCurrentPage(1);
            }}
            className="px-4 py-3 border border-slate-200 rounded-xl bg-white/50 focus:ring-blue-500/20 text-slate-700"
          >
            <option value="all">All Categories</option>
            <option value="chargeback">Chargeback</option>
            <option value="tnx-issue">Transaction Issue</option>
          </select>
        </div>
      </div>

      {/* Tickets Grid */}
      {loading ? (
        <Spinner message="Fetching tickets, please wait..." />
      ) : (
        <div className="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6">
          {tickets.map((ticket) => (
            <div
              key={ticket._id}
              className="bg-white/80 backdrop-blur-sm rounded-2xl shadow-sm border border-slate-200/60 p-6 hover:shadow-lg hover:shadow-blue-500/10 transition-all duration-300 group cursor-pointer"
              onClick={() => onViewTicket(ticket)}
            >
              <div className="flex items-start justify-between mb-4">
                <div className="flex items-center space-x-3">
                  <div className="w-10 h-10 bg-gradient-to-r from-blue-500 to-indigo-500 rounded-xl flex items-center justify-center">
                    <span className="text-white font-semibold text-sm">
                      #{ticket._id.slice(-3)}
                    </span>
                  </div>
                  <div>
                    <span
                      className={`inline-flex items-center px-3 py-1 rounded-full text-xs font-medium border ${getPriorityColor(
                        ticket.priority
                      )}`}
                    >
                      {getPriorityIcon(ticket.priority)}
                      <span
                        className={
                          getPriorityIcon(ticket.priority) ? "ml-1" : ""
                        }
                      >
                        {ticket.priority}
                      </span>
                    </span>
                  </div>
                </div>
                <button className="p-2 text-slate-400 hover:text-slate-600 rounded-lg hover:bg-slate-100 transition-colors opacity-0 group-hover:opacity-100">
                  <MoreHorizontal className="h-4 w-4" />
                </button>
              </div>

              <div className="mb-4">
                <h3 className="text-lg font-semibold text-slate-900 mb-2 line-clamp-2 group-hover:text-blue-700 transition-colors">
                  {ticket.title}
                </h3>
                <p className="text-slate-600 text-sm line-clamp-2 mb-3">
                  {ticket.description}
                </p>
                <div className="flex items-center space-x-2">
                  <span
                    className={`inline-flex items-center px-3 py-1 rounded-full text-xs font-medium border ${getStatusColor(
                      ticket.status
                    )}`}
                  >
                    {ticket.status.replace("_", " ")}
                  </span>
                  <span className="text-xs text-slate-500 bg-slate-100 px-2 py-1 rounded-md">
                    {ticket.ticket_type}
                  </span>
                </div>
              </div>

              <div className="flex items-center justify-between pt-4 border-t border-slate-100">
                <div className="flex items-center text-xs text-slate-500">
                  <User className="h-4 w-4 mr-1" />
                  {getUserName(ticket.assignedTo)}
                </div>
                <div className="flex items-center space-x-2">
                  {ticket.dueDate && (
                    <div
                      className={`flex items-center text-xs ${
                        isOverdue(new Date(ticket.dueDate))
                          ? "text-red-600"
                          : "text-slate-500"
                      }`}
                    >
                      <Clock className="h-4 w-4 mr-1" />
                      {formatDate(new Date(ticket.dueDate))}
                    </div>
                  )}
                  <ArrowUpRight className="h-4 w-4 text-slate-400 group-hover:text-blue-500 transition-colors" />
                </div>
              </div>
            </div>
          ))}
        </div>
      )}

      {/* Empty State */}
      {!loading && tickets.length === 0 && (
        <div className="text-center py-12">
          <div className="w-24 h-24 bg-slate-100 rounded-full flex items-center justify-center mx-auto mb-4">
            <Ticket className="h-12 w-12 text-slate-400" />
          </div>
          <h3 className="text-lg font-medium text-slate-900 mb-2">
            No tickets found
          </h3>
          <p className="text-slate-500 mb-6">
            Try adjusting your search or filter criteria
          </p>
          <button
            onClick={onCreateTicket}
            className="inline-flex items-center px-4 py-2 border border-transparent rounded-lg text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 transition-colors"
          >
            <Plus className="h-4 w-4 mr-2" />
            Create First Ticket
          </button>
        </div>
      )}

      {selectedTicket && (
        <TicketDetail
          ticket={selectedTicket}
          users={users}
          onClose={() => setSelectedTicket(null)}
          onEdit={() => console.log("Edit", selectedTicket)}
        />
      )}
      {/* Pagination */}
      {totalPages > 1 && (
        <div className="flex justify-center pt-4 pb-10">
          <Pagination
            currentPage={currentPage}
            totalPages={totalPages}
            onPageChange={setCurrentPage}
          />
        </div>
      )}
    </div>